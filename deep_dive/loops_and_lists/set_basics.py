list_1 = [1, 2, 3, 'a', 'b', 'c']
list_2 = [2, 3, 4, 'b', 'c', 'd']
list_3 = [3, 'x', 'y', 'z']
tuple_example = (3, 4, 5, 'y')
simple_set = {4, 5, 6, 'yoooo'}
print(f'simple set: {simple_set}')
set_from_list = set(list_1)
print(f'set from list: {set_from_list}')
set_from_tuple = set(tuple_example)
print(f'set from tuple: {set_from_tuple}')
simple_set.add(7)
print(f'simple set after add: {simple_set}')
print(f'length of set (size): {len(simple_set)}')
simple_set_copy = simple_set.copy()
simple_set_copy.add(8)
print(f'simple set: {simple_set}')
print(f'simple set copy: {simple_set_copy}')
simple_set.update(simple_set_copy)
print(f'simple set: {simple_set}')
# union (from the theory) is similar to update without duplicates
simple_set.update(list_2)
print(f'simple set: {simple_set}')
simple_set.update(tuple_example)
print(f'simple set: {simple_set}')
simple_set.remove(2)
print(f'simple set after remove: {simple_set}')
# simple_set.remove(10)
print(f'we should remove only elements that are in the set, otherwise we\'ll get an error: KeyError')
simple_set.discard(3)
print(f'simple set after discard: {simple_set}')
simple_set.discard(10)
print(f'simple set after discard: {simple_set}')
pop_from_set = simple_set.pop()
print(f'simple set after pop: {simple_set}')
print(f'popped value is: {pop_from_set}')
simple_set_copy.clear()
print(f'cleared copy of simple set: {simple_set_copy}')
simple_set_copy = simple_set.copy()
print('=== iterate through set and pop each element')

for step in range(len(simple_set_copy)):
    pop_from_set = simple_set_copy.pop()
    print(f'step number: {step + 1}')
    print(f'simple set coopy after pop: {simple_set_copy}')
    print(f'popped value is: {pop_from_set}')

print('=== iterate through set')
for element in simple_set:
    print(f'current element is: {element}')
print(f'simple set after iteration is the same: {simple_set}')

print(f'set contains 9? {9 in simple_set}')
print(f'set contains 8? {8 in simple_set}')
set_from_list_1 = set(list_1)
set_from_list_2 = set(list_2)
set_from_list_3 = set(list_3)
print(f'set_from_list_1 before update: {set_from_list_1}')
print(f'set_from_list_2 before update: {set_from_list_2}')
print(f'set_from_list_3 before update: {set_from_list_3}')
set_from_list_3.intersection_update(set_from_list_1)
print(f'set_from_list_3 after update: {set_from_list_3}')
intersection_result = set_from_list_2.intersection(set_from_list_1)
print(f'set_from_list_2 after update: {set_from_list_2}')
print(f'intersection result is: {intersection_result}')
set_from_list_3 = set(list_3)
print(f'set_from_list_3 before update: {set_from_list_3}')
set_from_list_3.symmetric_difference_update(set_from_list_1)
print(f'set_from_list_3 after update: {set_from_list_3}')
symmetric_difference_result = set_from_list_2.symmetric_difference(set_from_list_1)
print(f'set_from_list_2 after update: {set_from_list_2}')
print(f'symmetric difference result is: {symmetric_difference_result}')
